\contentsline {section}{\numberline {1}参考学习网址}{4}{section.1}
\contentsline {section}{\numberline {2}Linux}{5}{section.2}
\contentsline {subsection}{\numberline {2.1}题目}{5}{subsection.2.1}
\contentsline {subsubsection}{\numberline {2.1.1}熟练netstat tcpdump ipcs ipcrm}{5}{subsubsection.2.1.1}
\contentsline {subsubsection}{\numberline {2.1.2}共享内存段被映射进进程空间之后，存在于进程空间的什么位置？共享内存段}{5}{subsubsection.2.1.2}
\contentsline {subsubsection}{\numberline {2.1.3}进程内存空间分布情况}{5}{subsubsection.2.1.3}
\contentsline {subsubsection}{\numberline {2.1.4}ELF是什么？其大小与程序中全局变量的是否初始化有什么关系}{5}{subsubsection.2.1.4}
\contentsline {subsubsection}{\numberline {2.1.5}动态链接和静态链接的区别？}{5}{subsubsection.2.1.5}
\contentsline {subsubsection}{\numberline {2.1.6}32位系统一个进程最多有多少堆内存}{5}{subsubsection.2.1.6}
\contentsline {subsubsection}{\numberline {2.1.7}写一个c程序辨别系统是大端or小端字节序}{5}{subsubsection.2.1.7}
\contentsline {subsubsection}{\numberline {2.1.8}信号：列出常见的信号，信号怎么处理？}{5}{subsubsection.2.1.8}
\contentsline {subsubsection}{\numberline {2.1.9}i++ 是否原子操作?并解释为什么?}{5}{subsubsection.2.1.9}
\contentsline {subsubsection}{\numberline {2.1.10}说出你所知道的各类linux系统的各类同步机制（重点），什么是死锁？如何避免死锁}{5}{subsubsection.2.1.10}
\contentsline {subsubsection}{\numberline {2.1.11}如何实现守护进程？}{5}{subsubsection.2.1.11}
\contentsline {subsubsection}{\numberline {2.1.12}linux的任务调度机制是什么？}{5}{subsubsection.2.1.12}
\contentsline {subsubsection}{\numberline {2.1.13}标准库函数和系统调用的区别？}{5}{subsubsection.2.1.13}
\contentsline {subsubsection}{\numberline {2.1.14}系统如何将一个信号通知到进程？}{5}{subsubsection.2.1.14}
\contentsline {subsubsection}{\numberline {2.1.15}fork()一子进程程后父进程的全局变量能不能使用？}{5}{subsubsection.2.1.15}
\contentsline {subsubsection}{\numberline {2.1.16}多线程与多进程的区别}{5}{subsubsection.2.1.16}
\contentsline {subparagraph}{线程安全的条件}{5}{section*.2}
\contentsline {subparagraph}{关于线程的堆栈}{5}{section*.3}
\contentsline {subsubsection}{\numberline {2.1.17}多线程的各种锁！}{5}{subsubsection.2.1.17}
\contentsline {subsubsection}{\numberline {2.1.18}缓存淘汰算法-LRU}{6}{subsubsection.2.1.18}
\contentsline {subsubsection}{\numberline {2.1.19}可重入与不可重入}{6}{subsubsection.2.1.19}
\contentsline {section}{\numberline {3}C++}{7}{section.3}
\contentsline {subsection}{\numberline {3.1}题目}{7}{subsection.3.1}
\contentsline {subsubsection}{\numberline {3.1.1}结构体用memcmp比较的问题}{7}{subsubsection.3.1.1}
\contentsline {subsubsection}{\numberline {3.1.2}memcpy 实现}{7}{subsubsection.3.1.2}
\contentsline {subsubsection}{\numberline {3.1.3}strcpy 实现}{7}{subsubsection.3.1.3}
\contentsline {subsubsection}{\numberline {3.1.4}strcat 实现}{7}{subsubsection.3.1.4}
\contentsline {subsubsection}{\numberline {3.1.5}书写 给定类的赋值操作符 = }{7}{subsubsection.3.1.5}
\contentsline {subsubsection}{\numberline {3.1.6}什么是“引用”？申明和使用“引用”要注意哪些问题？}{7}{subsubsection.3.1.6}
\contentsline {subsubsection}{\numberline {3.1.7}将“引用”作为函数参数有哪些特点？}{7}{subsubsection.3.1.7}
\contentsline {subsubsection}{\numberline {3.1.8}在什么时候需要使用“常引用”？}{8}{subsubsection.3.1.8}
\contentsline {subsubsection}{\numberline {3.1.9}将“引用”作为函数返回值类型的格式、好处和需要遵守的规则?}{8}{subsubsection.3.1.9}
\contentsline {subsubsection}{\numberline {3.1.10}引用与指针的区别是什么？}{8}{subsubsection.3.1.10}
\contentsline {subsubsection}{\numberline {3.1.11}什么时候需要“引用”？}{8}{subsubsection.3.1.11}
\contentsline {subsubsection}{\numberline {3.1.12}结构与联合有和区别？}{8}{subsubsection.3.1.12}
\contentsline {subsubsection}{\numberline {3.1.13} 已知strcpy的函数原型：char *strcpy(char *strDest, const char *strSrc)其中strDest 是目的字符串，strSrc 是源字符串。不调用C++/C 的字符串库函数，请编写函数 strcpy}{9}{subsubsection.3.1.13}
\contentsline {subsubsection}{\numberline {3.1.14}不用中间变量实现交换swap的问题}{9}{subsubsection.3.1.14}
\contentsline {subsubsection}{\numberline {3.1.15}＃include<file.h> 与＃include "file.h"的区别？}{9}{subsubsection.3.1.15}
\contentsline {subsubsection}{\numberline {3.1.16}面向对象的三个基本特征，并简单叙述之？}{9}{subsubsection.3.1.16}
\contentsline {subsubsection}{\numberline {3.1.17}重载（overload)和重写(overried，有的书也叫做“覆盖”）的区别？}{9}{subsubsection.3.1.17}
\contentsline {subsubsection}{\numberline {3.1.18}多态的作用？}{9}{subsubsection.3.1.18}
\contentsline {subsubsection}{\numberline {3.1.19}New delete 与malloc free 的联系与区别?}{10}{subsubsection.3.1.19}
\contentsline {subsubsection}{\numberline {3.1.20}有哪几种情况只能用intializationlist 而不能用assignment?}{10}{subsubsection.3.1.20}
\contentsline {subsubsection}{\numberline {3.1.21}C++是不是类型安全的？}{10}{subsubsection.3.1.21}
\contentsline {subsubsection}{\numberline {3.1.22}指针函数与函数指针}{10}{subsubsection.3.1.22}
\contentsline {subsubsection}{\numberline {3.1.23}请说出const与\#define 相比，有何优点？}{10}{subsubsection.3.1.23}
\contentsline {subsubsection}{\numberline {3.1.24}简述数组与指针的区别？}{10}{subsubsection.3.1.24}
\contentsline {subsubsection}{\numberline {3.1.25}类成员函数的重载、覆盖和隐藏区别？}{11}{subsubsection.3.1.25}
\contentsline {subparagraph}{成员函数被重载的特征}{11}{section*.4}
\contentsline {subparagraph}{覆盖是指派生类函数覆盖基类函数，特征是}{11}{section*.5}
\contentsline {subparagraph}{“隐藏”是指派生类的函数屏蔽了与其同名的基类函数，规则如下}{11}{section*.6}
\contentsline {subsubsection}{\numberline {3.1.26}如何打印出当前源文件的文件名以及源文件的当前行号？}{11}{subsubsection.3.1.26}
\contentsline {subsection}{\numberline {3.2}腾讯-输出是什么 }{11}{subsection.3.2}
\contentsline {section}{\numberline {4}STL 组件与使用}{13}{section.4}
\contentsline {subsection}{\numberline {4.1}题目}{13}{subsection.4.1}
\contentsline {subsubsection}{\numberline {4.1.1}使用过哪些组件？}{13}{subsubsection.4.1.1}
\contentsline {subsection}{\numberline {4.2}体会}{13}{subsection.4.2}
\contentsline {section}{\numberline {5}Boost 组件与使用}{14}{section.5}
\contentsline {subsection}{\numberline {5.1}题目}{14}{subsection.5.1}
\contentsline {subparagraph}{boost 的网络库ASIO}{14}{section*.7}
\contentsline {section}{\numberline {6}网络、服务器编程}{15}{section.6}
\contentsline {subsection}{\numberline {6.1}参考C++\_NetProgram}{15}{subsection.6.1}
\contentsline {subsection}{\numberline {6.2}题目}{15}{subsection.6.2}
\contentsline {subsubsection}{\numberline {6.2.1}多线程和多进程的区别}{15}{subsubsection.6.2.1}
\contentsline {subparagraph}{线程所私有的}{15}{section*.8}
\contentsline {subsubsection}{\numberline {6.2.2}多线程锁的种类有哪些？}{15}{subsubsection.6.2.2}
\contentsline {subsubsection}{\numberline {6.2.3}自旋锁和互斥锁的区别？}{15}{subsubsection.6.2.3}
\contentsline {subsubsection}{\numberline {6.2.4}进程间通信和线程间通信}{15}{subsubsection.6.2.4}
\contentsline {subsubsection}{\numberline {6.2.5}多线程程序架构，线程数量应该如何设置？}{15}{subsubsection.6.2.5}
\contentsline {subsubsection}{\numberline {6.2.6}什么是原子操作，gcc提供的原子操作原语，使用这些原语如何实现读写锁？}{15}{subsubsection.6.2.6}
\contentsline {subsubsection}{\numberline {6.2.7}网络编程设计模式，reactor/proactor/半同步半异步模式？}{15}{subsubsection.6.2.7}
\contentsline {subsubsection}{\numberline {6.2.8}有一个计数器，多个线程都需要更新，会遇到什么问题，原因是什么，应该如何做？如何优化？}{16}{subsubsection.6.2.8}
\contentsline {subsubsection}{\numberline {6.2.9}如果select返回可读，结果只读到0字节，什么情况？}{16}{subsubsection.6.2.9}
\contentsline {subsubsection}{\numberline {6.2.10}connect可能会长时间阻塞，怎么解决?}{16}{subsubsection.6.2.10}
\contentsline {subsubsection}{\numberline {6.2.11}keepalive 是什么东西？如何使用？}{16}{subsubsection.6.2.11}
\contentsline {subsubsection}{\numberline {6.2.12}socket什么情况下可读？}{16}{subsubsection.6.2.12}
\contentsline {subsubsection}{\numberline {6.2.13}udp调用connect有什么作用？}{16}{subsubsection.6.2.13}
\contentsline {subsubsection}{\numberline {6.2.14}socket编程，如果client断电了，服务器如何快速知道？}{16}{subsubsection.6.2.14}
\contentsline {subsubsection}{\numberline {6.2.15}怎么清理僵尸进程}{16}{subsubsection.6.2.15}
\contentsline {subsubsection}{\numberline {6.2.16}系统调用函数}{16}{subsubsection.6.2.16}
\contentsline {subsubsection}{\numberline {6.2.17}socket 的阻塞和非阻塞的概念}{16}{subsubsection.6.2.17}
\contentsline {subsubsection}{\numberline {6.2.18}信号与信号量之间的区别}{16}{subsubsection.6.2.18}
\contentsline {subsubsection}{\numberline {6.2.19}TCP头大小，包含字段？三次握手，四次断开描述过程，都有些什么状态。状态变迁图。TCP/IP收发缓冲区}{16}{subsubsection.6.2.19}
\contentsline {subsubsection}{\numberline {6.2.20}使用udp和tcp进程网络传输，为什么tcp能保证包是发送顺序，而 udp无法保证？}{16}{subsubsection.6.2.20}
\contentsline {subsubsection}{\numberline {6.2.21}epoll哪些触发模式，有啥区别？}{16}{subsubsection.6.2.21}
\contentsline {subsubsection}{\numberline {6.2.22}tcp与udp的区别（必问）为什么TCP要叫做数据流？}{16}{subsubsection.6.2.22}
\contentsline {subsubsection}{\numberline {6.2.23}流量控制和拥塞控制的实现机制}{16}{subsubsection.6.2.23}
\contentsline {subsubsection}{\numberline {6.2.24}滑动窗口的实现机制}{16}{subsubsection.6.2.24}
\contentsline {subsubsection}{\numberline {6.2.25}epoll和select的区别？}{17}{subsubsection.6.2.25}
\contentsline {subsubsection}{\numberline {6.2.26}网络中，如果客户端突然掉线或者重启，服务器端怎么样才能立刻知道？}{17}{subsubsection.6.2.26}
\contentsline {subsubsection}{\numberline {6.2.27}TTL是什么？有什么用处，通常那些工具会用到它？ping? traceroute? ifconfig? netstat?}{17}{subsubsection.6.2.27}
\contentsline {subsubsection}{\numberline {6.2.28}linux的五种IO模式/异步模式.}{17}{subsubsection.6.2.28}
\contentsline {subsubsection}{\numberline {6.2.29}请说出http协议的优缺点.}{17}{subsubsection.6.2.29}
\contentsline {subsubsection}{\numberline {6.2.30}NAT类型，UDP穿透原理}{17}{subsubsection.6.2.30}
\contentsline {subsubsection}{\numberline {6.2.31}大规模连接上来，并发模型怎么设计}{17}{subsubsection.6.2.31}
\contentsline {subsubsection}{\numberline {6.2.32}流量控制与拥塞控制的区别，节点计算机怎样感知网络拥塞了？}{17}{subsubsection.6.2.32}
\contentsline {section}{\numberline {7}多线程编程}{18}{section.7}
\contentsline {subsection}{\numberline {7.1}参考C++\_Advanced}{18}{subsection.7.1}
\contentsline {section}{\numberline {8}算法}{19}{section.8}
\contentsline {section}{\numberline {9}程序设计}{20}{section.9}
\contentsline {subsection}{\numberline {9.1}设计模式}{20}{subsection.9.1}
\contentsline {subsection}{\numberline {9.2}UML}{20}{subsection.9.2}
\contentsline {section}{\numberline {10}OpenGL}{21}{section.10}
\contentsline {subsection}{\numberline {10.1}参考OpenGL}{21}{subsection.10.1}
\contentsline {section}{\numberline {11}DirectX}{22}{section.11}
\contentsline {subsection}{\numberline {11.1}参考DirectX9}{22}{subsection.11.1}
\contentsline {section}{\numberline {12}PC游戏试玩记录}{23}{section.12}
\contentsline {subsection}{\numberline {12.1}坦克世界}{23}{subsection.12.1}
\contentsline {subsection}{\numberline {12.2}生死狙击}{23}{subsection.12.2}
\contentsline {paragraph}{连跳}{23}{section*.9}
\contentsline {paragraph}{升级跳}{23}{section*.10}
\contentsline {subsection}{\numberline {12.3}Dota2}{23}{subsection.12.3}
\contentsline {paragraph}{1.起步-新手}{23}{section*.11}
\contentsline {paragraph}{2.准备-新玩}{23}{section*.12}
\contentsline {subsection}{\numberline {12.4}CrossFire}{23}{subsection.12.4}
\contentsline {subsection}{\numberline {12.5}League Of Legends}{23}{subsection.12.5}
\contentsline {subsection}{\numberline {12.6}文明5}{23}{subsection.12.6}
\contentsline {subsection}{\numberline {12.7}极品飞车-系列}{23}{subsection.12.7}
\contentsline {subsection}{\numberline {12.8}QQ飞车--鹏鹏卡丁车}{23}{subsection.12.8}
